@model DSAR.ViewModels.UserView
@using Microsoft.AspNetCore.Authorization
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>الصفحة الرئيسية</title>
    <link rel="stylesheet" href="~/css/main.css" asp-append-version="true" />


</head>
<body>
    <div class="container">
        <!-- Logout -->
        <form asp-action="Logout" method="post">
            <button type="submit" style="background: none; border: none; padding: 0;">
                <img src="~/images/logout.png" alt="Logout" class="logout-icon" />
            </button>
        </form>

        <div class="welcome-text">
            <h1>مرحباً يا @User.FindFirst("FirstName")?.Value @User.FindFirst("LastName")?.Value</h1>
            <p>هل ترغب في عرض طلباتك أو تقديم طلب جديد؟</p>
        </div>

        <div class="buttons">
            <form asp-controller="Request" asp-action="MyRequest" method="get">
                <button type="submit" class="btn requests-btn">طلباتي</button>
            </form>

            <form asp-controller="Request" asp-action="Step1" method="get">
                <button type="submit" class="btn submit-btn">تقديم طلب</button>
            </form>

            @if (User.IsInRole("Admin"))
            {
                <form asp-controller="Admin" asp-action="InsertUser" method="get">
                    <button type="submit" class="btn" style="background:#6c5ce7;">إدخال</button>
                </form>
                <form asp-controller="Admin" asp-action="ListAllUsers" method="get">
                    <button type="submit" class="btn" style="background:#00cec9;">قائمة المستخدمين</button>
                </form>
                <form asp-controller="Admin" asp-action="ListRequests" method="get">
                    <button type="submit" class="btn" style="background:#00cec9;">قائمة الطلبات</button>
                </form>
            }

            @if (!User.IsInRole("User"))
            {
                <form asp-controller="Request" asp-action="OrderPage" method="get">
                    <button type="submit" class="btn" style="background:#35AC90; border-radius: 27px;">
                        مراجعة الطلبات
                    </button>
                </form>
            }


        </div>
    </div>


</body>

</html>
@if (Model.TermsAccepted == false)
{
    <div id="termsPopup" class="popup-overlay">
        <div class="popup-content">
            <h1>المتطلبات والشروط والأحكام:</h1>
            <ul class="requirements">
                <li>جميع الوثائق يجب ان تكون سارية المفعول</li>
                <li>عدم وجود طلب قائم لنفس الخدمة</li>
                <li>استكمال جميع الحقول المطلوبة</li>
                <li>الطلبات الغير نشطة يتم اغلاقها</li>
                <li>مقدم الطلب يجب ان يكون موظف رسمي بالهيئة الملكية</li>
                <li>يجب ارفاق جميع موافقات المدن</li>
            </ul>

            <form asp-action="Terms" method="post">
                <div class="checkbox-container">
                    <label>
                        <input type="checkbox" id="termsCheckbox" name="termsAccepted"/>
                        أوافق على الشروط والأحكام
                    </label>
                </div>
                <div class="popup-buttons">
                    <button type="submit" name="terms" value="Decline" class="popup-btn reject-btn">رفض الطلب</button>
                    <button type="submit" id="acceptTermsBtn" name="terms" value="Accept" class="popup-btn accept-btn" disabled>قبول الطلب</button>
                </div>
            </form>
        </div>
    </div>

    <style>
        /* Fullscreen overlay */
        .popup-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6); /* semi-transparent */
            z-index: 9999;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        /* Modal content box */
        .popup-content {
            background-color: #fff;
            padding: 30px;
            border-radius: 10px;
            width: 90%;
            max-width: 600px;
            text-align: right;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        }

        .requirements {
            text-align: right;
            padding-right: 20px;
        }

        .checkbox-container {
            margin-top: 20px;
            font-size: 16px;
        }

        .popup-buttons {
            margin-top: 20px;
            display: flex;
            justify-content: space-between;
        }

        .popup-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            font-weight: bold;
            cursor: pointer;
        }

        .accept-btn {
            background-color: #28a745;
            color: white;
        }

        .reject-btn {
            background-color: #dc3545;
            color: white;
        }
    </style>

    <script>
        const termsCheckbox = document.getElementById('termsCheckbox');
        const acceptBtn = document.getElementById('acceptTermsBtn');

        termsCheckbox.addEventListener('change', () => {
            acceptBtn.disabled = !termsCheckbox.checked;
        });
    </script>
}
